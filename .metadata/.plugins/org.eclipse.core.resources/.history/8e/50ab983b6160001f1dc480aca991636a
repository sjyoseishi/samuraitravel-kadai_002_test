package com.example.samuraitravel.controller;

import org.springframework.stereotype.Controller;
import org.springframework.web.bind.annotation.RequestMapping;

import com.example.samuraitravel.repository.HouseRepository;
import com.example.samuraitravel.repository.ReviewRepository;

import com.example.samuraitravel.service.ReviewService;
import org.springframework.ui.Model;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.data.web.PageableDefault;
import org.springframework.data.domain.Sort.Direction;
import com.example.samuraitravel.entity.Review;
import org.springframework.data.domain.Page;
import org.springframework.data.domain.Pageable;
import org.springframework.web.bind.annotation.PathVariable;
import com.example.samuraitravel.entity.House;


@Controller
@RequestMapping("/houses/{houseId}/review")
public class ReviewController {

    private final ReviewRepository reviewRepository;
    private final HouseRepository houseRepository;
    private final ReviewService reviewService;

    public ReviewController(ReviewRepository reviewRepository,HouseRepository houseRepository,ReviewService reviewService) {
	    this.reviewRepository = reviewRepository;
	    this.houseRepository = houseRepository;
	    this.reviewService = reviewService;

    }

	 //民宿詳細
	 @GetMapping
	  public String index(Model model,@PageableDefault(page = 0, size = 6, sort = "id", direction = Direction.ASC)Pageable pageable) {
		   Page<Review> reviewPage;
			   reviewPage = reviewRepository.findAll(pageable);
		   model.addAttribute("reviewPage", reviewPage);
		   return "houses/show";
	  }

	 //レビュー一覧の表示
	 @GetMapping("/table")
	  public String table(@PathVariable(name = "houseId") Integer houseId,Model model,@PageableDefault(page = 0, size = 10, sort = "id", direction = Direction.ASC)Pageable pageable) {
		  Page<Review> reviewPage;
		  reviewPage = reviewRepository.findAll(pageable);
		  House house = houseRepository.getReferenceById(houseId);
		  model.addAttribute("house", house);
	      model.addAttribute("reviewPage", reviewPage);
	      return "review/table";
	  }


}
